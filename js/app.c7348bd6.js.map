{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?6c77","webpack:///./src/App.vue?97f5","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/rest.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/index.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fae4","webpack:///./src/views/Admin.vue","webpack:///./src/views/Admin.vue?7d98","webpack:///./src/views/Home.vue","webpack:///./src/components/Leaderboard.vue","webpack:///./src/components/Leaderboard.vue?6a9b","webpack:///./src/views/Home.vue?c772","webpack:///./src/views/Team.vue","webpack:///./src/views/Team.vue?d773","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/types/gitgood/goal.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/types/gitgood/achievement.js","webpack:///./src/App.vue?3090","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/types/gitgood/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/types/gitgood/team.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/octalmage/gitgood/octalmage.gitgood.gitgood/module/types/gitgood/stat.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","uint64","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAchievementAll","method","queryAchievement","id","queryGoalAll","queryGoal","queryStatAll","queryStat","queryTeamAll","queryTeam","types","MsgCreateAchievement","MsgDeleteGoal","MsgUpdateTeam","MsgDeleteStat","MsgUpdateAchievement","MsgCreateTeam","MsgUpdateStat","MsgCreateGoal","MsgDeleteTeam","MsgDeleteAchievement","MsgUpdateGoal","MsgCreateStat","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreateAchievement","msgDeleteGoal","msgUpdateTeam","msgDeleteStat","msgUpdateAchievement","msgCreateTeam","msgUpdateStat","msgCreateGoal","msgDeleteTeam","msgDeleteAchievement","msgUpdateGoal","msgCreateStat","queryClient","initTxClient","vuexGetters","initQueryClient","mergeResults","next_values","prop","getStructure","template","structure","fields","field","getDefaultState","Achievement","AchievementAll","Goal","GoalAll","Stat","StatAll","Team","TeamAll","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getAchievement","getAchievementAll","getGoal","getGoalAll","getStat","getStatAll","getTeam","getTeamAll","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","QueryAchievement","options","subscribe","all","QueryAchievementAll","pagination","nextKey","QueryGoal","QueryGoalAll","QueryStat","QueryStatAll","QueryTeam","QueryTeamAll","sendMsgCreateAchievement","msg","sendMsgDeleteGoal","sendMsgUpdateTeam","sendMsgDeleteStat","sendMsgUpdateAchievement","sendMsgCreateTeam","sendMsgUpdateStat","sendMsgCreateGoal","sendMsgDeleteTeam","sendMsgDeleteAchievement","sendMsgUpdateGoal","sendMsgCreateStat","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryParams","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawValidatorCommission","msgSetWithdrawAddress","msgFundCommunityPool","msgWithdrawDelegatorReward","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getParams","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryParams","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgSetWithdrawAddress","sendMsgFundCommunityPool","sendMsgWithdrawDelegatorReward","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","V1Beta1ProposalStatus","V1Beta1VoteOption","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVote","MsgDeposit","MsgSubmitProposal","msgVote","msgDeposit","msgSubmitProposal","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVote","sendMsgDeposit","sendMsgSubmitProposal","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Order","V1State","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenTry","MsgChannelCloseInit","MsgChannelOpenAck","MsgChannelOpenConfirm","MsgTimeoutOnClose","MsgChannelCloseConfirm","MsgChannelOpenInit","MsgRecvPacket","MsgTimeout","MsgAcknowledgement","msgChannelOpenTry","msgChannelCloseInit","msgChannelOpenAck","msgChannelOpenConfirm","msgTimeoutOnClose","msgChannelCloseConfirm","msgChannelOpenInit","msgRecvPacket","msgTimeout","msgAcknowledgement","V1Beta1BondStatus","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenTry","sendMsgChannelCloseInit","sendMsgChannelOpenAck","sendMsgChannelOpenConfirm","sendMsgTimeoutOnClose","sendMsgChannelCloseConfirm","sendMsgChannelOpenInit","sendMsgRecvPacket","sendMsgTimeout","sendMsgAcknowledgement","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgUndelegate","msgCreateValidator","msgDelegate","msgBeginRedelegate","msgEditValidator","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgUndelegate","sendMsgCreateValidator","sendMsgDelegate","sendMsgBeginRedelegate","sendMsgEditValidator","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenTry","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenAck","msgConnectionOpenTry","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenAck","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenTry","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenAck","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpdateClient","msgSubmitMisbehaviour","msgCreateClient","msgUpgradeClient","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpdateClient","sendMsgSubmitMisbehaviour","sendMsgCreateClient","sendMsgUpgradeClient","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","OctalmageGitgoodOctalmageGitgoodGitgood","load","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","disabled","submitting","getEXP","hasFunds","currentAccount","modulePath","moduleType","balances","_depsLoaded","loggedIn","watch","newAccount","updateBalances","methods","items","teams","item","props","Leaderboard","mounted","routerHistory","createWebHistory","routes","component","Home","Admin","Index","router","createRouter","history","app","createApp","App","config","globalProperties","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseGoal","creator","label","comparison","exp","createdAt","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","baseAchievement","achievementID","owner","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgCreateAchievement","baseMsgUpdateAchievement","baseMsgDeleteAchievement","baseMsgCreateGoal","baseMsgUpdateGoal","baseMsgDeleteGoal","baseMsgCreateStat","statType","initial","final","baseMsgUpdateStat","baseMsgDeleteStat","baseMsgCreateTeam","users","baseMsgUpdateTeam","baseMsgDeleteTeam","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseTeam","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","baseStat","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.c7348bd6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseMsgCreateClient = { signer: '' };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpdateClient = { clientId: '', signer: '' };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgUpgradeClient = { clientId: '', signer: '' };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse\n        };\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviour = { clientId: '', signer: '' };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'CreateClient', data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpdateClient', data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'UpgradeClient', data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.client.v1.Msg', 'SubmitMisbehaviour', data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { Header } from '../../tendermint/types/types';\nimport { ProofOps } from '../../tendermint/crypto/proof';\nimport { EvidenceParams, ValidatorParams, VersionParams } from '../../tendermint/types/params';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.abci';\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NEW':\n            return CheckTxType.NEW;\n        case 1:\n        case 'RECHECK':\n            return CheckTxType.RECHECK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return 'NEW';\n        case CheckTxType.RECHECK:\n            return 'RECHECK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case 'DUPLICATE_VOTE':\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case 'LIGHT_CLIENT_ATTACK':\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return 'UNKNOWN';\n        case EvidenceType.DUPLICATE_VOTE:\n            return 'DUPLICATE_VOTE';\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return 'LIGHT_CLIENT_ATTACK';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case 'REJECT':\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case 'REJECT_FORMAT':\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case 'REJECT_SENDER':\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseOfferSnapshot_Result.ABORT:\n            return 'ABORT';\n        case ResponseOfferSnapshot_Result.REJECT:\n            return 'REJECT';\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return 'REJECT_FORMAT';\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return 'REJECT_SENDER';\n        default:\n            return 'UNKNOWN';\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'UNKNOWN':\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case 'ACCEPT':\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case 'ABORT':\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case 'RETRY':\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case 'RETRY_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case 'REJECT_SNAPSHOT':\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return 'UNKNOWN';\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return 'ACCEPT';\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return 'ABORT';\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return 'RETRY';\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return 'RETRY_SNAPSHOT';\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return 'REJECT_SNAPSHOT';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseRequestEcho = { message: '' };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    }\n};\nconst baseRequestInfo = { version: '', blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== '') {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestSetOption = { key: '', value: '' };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseRequestInitChain = { chainId: '', initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestQuery = { path: '', height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    }\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    }\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    }\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    }\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: '' };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    }\n};\nconst baseResponseException = { error: '' };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== '') {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEcho = { message: '' };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== '') {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = '';\n        }\n        return message;\n    }\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    }\n};\nconst baseResponseInfo = {\n    data: '',\n    version: '',\n    appVersion: 0,\n    lastBlockHeight: 0\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== '') {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseSetOption = { code: 0, log: '', info: '' };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: '',\n    info: '',\n    index: 0,\n    height: 0,\n    codespace: ''\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: ''\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== '') {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        return message;\n    }\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    }\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: ''\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    }\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => (e ? VoteInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEvent = { type: '' };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    }\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Echo', data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Flush', data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Info', data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'SetOption', data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'DeliverTx', data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'CheckTx', data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Query', data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'Commit', data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'InitChain', data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'BeginBlock', data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'EndBlock', data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ListSnapshots', data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'OfferSnapshot', data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'LoadSnapshotChunk', data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request('tendermint.abci.ABCIApplication', 'ApplySnapshotChunk', data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../google/protobuf/duration';\nexport const protobufPackage = 'tendermint.types';\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    }\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorParams = { pubKeyTypes: '' };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    }\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined && (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case 4:\n        case 'STATE_CLOSED':\n            return State.STATE_CLOSED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        case State.STATE_CLOSED:\n            return 'STATE_CLOSED';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'ORDER_NONE_UNSPECIFIED':\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case 'ORDER_UNORDERED':\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case 'ORDER_ORDERED':\n            return Order.ORDER_ORDERED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return 'ORDER_NONE_UNSPECIFIED';\n        case Order.ORDER_UNORDERED:\n            return 'ORDER_UNORDERED';\n        case Order.ORDER_ORDERED:\n            return 'ORDER_ORDERED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: ''\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        return message;\n    }\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: '',\n    version: '',\n    portId: '',\n    channelId: ''\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== '') {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== '') {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { portId: '', channelId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        return message;\n    }\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: '',\n    sourceChannel: '',\n    destinationPort: '',\n    destinationChannel: '',\n    timeoutTimestamp: 0\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== '') {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== '') {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== '') {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = '';\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst basePacketState = { portId: '', channelId: '', sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = {\n    moniker: '',\n    identity: '',\n    website: '',\n    securityContact: '',\n    details: ''\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = {\n    operatorAddress: '',\n    jailed: false,\n    status: 0,\n    tokens: '',\n    delegatorShares: '',\n    unbondingHeight: 0,\n    minSelfDelegation: ''\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = {\n    delegatorAddress: '',\n    validatorAddress: '',\n    shares: ''\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    balance: ''\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: '',\n    sharesDst: ''\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: ''\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Home\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/wallet\" text=\"Wallet\" icon=\"Transactions\" />\n\t\t\t<SpLinkIcon link=\"/admin\" text=\"Admin\" icon=\"Lock\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=46c6cc32\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title gitgood/achievement.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAchievementAll\n         * @summary Queries a list of achievement items.\n         * @request GET:/octalmage/gitgood/gitgood/achievement\n         */\n        this.queryAchievementAll = (query, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/achievement`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAchievement\n         * @summary Queries a achievement by id.\n         * @request GET:/octalmage/gitgood/gitgood/achievement/{id}\n         */\n        this.queryAchievement = (id, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/achievement/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGoalAll\n         * @summary Queries a list of goal items.\n         * @request GET:/octalmage/gitgood/gitgood/goal\n         */\n        this.queryGoalAll = (query, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/goal`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGoal\n         * @summary Queries a goal by id.\n         * @request GET:/octalmage/gitgood/gitgood/goal/{id}\n         */\n        this.queryGoal = (id, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/goal/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStatAll\n         * @summary Queries a list of stat items.\n         * @request GET:/octalmage/gitgood/gitgood/stat\n         */\n        this.queryStatAll = (query, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/stat`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStat\n         * @summary Queries a stat by id.\n         * @request GET:/octalmage/gitgood/gitgood/stat/{id}\n         */\n        this.queryStat = (id, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/stat/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTeamAll\n         * @summary Queries a list of team items.\n         * @request GET:/octalmage/gitgood/gitgood/team\n         */\n        this.queryTeamAll = (query, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/team`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTeam\n         * @summary Queries a team by id.\n         * @request GET:/octalmage/gitgood/gitgood/team/{id}\n         */\n        this.queryTeam = (id, params = {}) => this.request({\n            path: `/octalmage/gitgood/gitgood/team/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateAchievement } from \"./types/gitgood/tx\";\nimport { MsgDeleteGoal } from \"./types/gitgood/tx\";\nimport { MsgUpdateTeam } from \"./types/gitgood/tx\";\nimport { MsgDeleteStat } from \"./types/gitgood/tx\";\nimport { MsgUpdateAchievement } from \"./types/gitgood/tx\";\nimport { MsgCreateTeam } from \"./types/gitgood/tx\";\nimport { MsgUpdateStat } from \"./types/gitgood/tx\";\nimport { MsgCreateGoal } from \"./types/gitgood/tx\";\nimport { MsgDeleteTeam } from \"./types/gitgood/tx\";\nimport { MsgDeleteAchievement } from \"./types/gitgood/tx\";\nimport { MsgUpdateGoal } from \"./types/gitgood/tx\";\nimport { MsgCreateStat } from \"./types/gitgood/tx\";\nconst types = [\n    [\"/octalmage.gitgood.gitgood.MsgCreateAchievement\", MsgCreateAchievement],\n    [\"/octalmage.gitgood.gitgood.MsgDeleteGoal\", MsgDeleteGoal],\n    [\"/octalmage.gitgood.gitgood.MsgUpdateTeam\", MsgUpdateTeam],\n    [\"/octalmage.gitgood.gitgood.MsgDeleteStat\", MsgDeleteStat],\n    [\"/octalmage.gitgood.gitgood.MsgUpdateAchievement\", MsgUpdateAchievement],\n    [\"/octalmage.gitgood.gitgood.MsgCreateTeam\", MsgCreateTeam],\n    [\"/octalmage.gitgood.gitgood.MsgUpdateStat\", MsgUpdateStat],\n    [\"/octalmage.gitgood.gitgood.MsgCreateGoal\", MsgCreateGoal],\n    [\"/octalmage.gitgood.gitgood.MsgDeleteTeam\", MsgDeleteTeam],\n    [\"/octalmage.gitgood.gitgood.MsgDeleteAchievement\", MsgDeleteAchievement],\n    [\"/octalmage.gitgood.gitgood.MsgUpdateGoal\", MsgUpdateGoal],\n    [\"/octalmage.gitgood.gitgood.MsgCreateStat\", MsgCreateStat],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateAchievement: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgCreateAchievement\", value: data }),\n        msgDeleteGoal: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgDeleteGoal\", value: data }),\n        msgUpdateTeam: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgUpdateTeam\", value: data }),\n        msgDeleteStat: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgDeleteStat\", value: data }),\n        msgUpdateAchievement: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgUpdateAchievement\", value: data }),\n        msgCreateTeam: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgCreateTeam\", value: data }),\n        msgUpdateStat: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgUpdateStat\", value: data }),\n        msgCreateGoal: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgCreateGoal\", value: data }),\n        msgDeleteTeam: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgDeleteTeam\", value: data }),\n        msgDeleteAchievement: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgDeleteAchievement\", value: data }),\n        msgUpdateGoal: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgUpdateGoal\", value: data }),\n        msgCreateStat: (data) => ({ typeUrl: \"/octalmage.gitgood.gitgood.MsgCreateStat\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Achievement } from \"./module/types/gitgood/achievement\";\nimport { Goal } from \"./module/types/gitgood/goal\";\nimport { Stat } from \"./module/types/gitgood/stat\";\nimport { Team } from \"./module/types/gitgood/team\";\nexport { Achievement, Goal, Stat, Team };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Achievement: {},\n        AchievementAll: {},\n        Goal: {},\n        GoalAll: {},\n        Stat: {},\n        StatAll: {},\n        Team: {},\n        TeamAll: {},\n        _Structure: {\n            Achievement: getStructure(Achievement.fromPartial({})),\n            Goal: getStructure(Goal.fromPartial({})),\n            Stat: getStructure(Stat.fromPartial({})),\n            Team: getStructure(Team.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAchievement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Achievement[JSON.stringify(params)] ?? {};\n        },\n        getAchievementAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AchievementAll[JSON.stringify(params)] ?? {};\n        },\n        getGoal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Goal[JSON.stringify(params)] ?? {};\n        },\n        getGoalAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GoalAll[JSON.stringify(params)] ?? {};\n        },\n        getStat: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Stat[JSON.stringify(params)] ?? {};\n        },\n        getStatAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.StatAll[JSON.stringify(params)] ?? {};\n        },\n        getTeam: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Team[JSON.stringify(params)] ?? {};\n        },\n        getTeamAll: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TeamAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: octalmage.gitgood.gitgood initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAchievement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAchievement(key.id)).data;\n                commit('QUERY', { query: 'Achievement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAchievement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAchievement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAchievement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAchievementAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAchievementAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAchievementAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AchievementAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAchievementAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAchievementAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAchievementAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGoal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGoal(key.id)).data;\n                commit('QUERY', { query: 'Goal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGoal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGoal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGoal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGoalAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGoalAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryGoalAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'GoalAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGoalAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGoalAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGoalAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStat({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStat(key.id)).data;\n                commit('QUERY', { query: 'Stat', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStat', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStat']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStat', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStatAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStatAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryStatAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'StatAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStatAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStatAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStatAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTeam({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTeam(key.id)).data;\n                commit('QUERY', { query: 'Team', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTeam', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTeam']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTeam', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTeamAll({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTeamAll(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTeamAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TeamAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTeamAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTeamAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTeamAll', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgCreateAchievement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateAchievement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAchievement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteGoal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteGoal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteGoal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateTeam({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateTeam(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTeam:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteStat({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStat(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStat:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateAchievement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateAchievement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAchievement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateTeam({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateTeam(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTeam:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateStat({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStat(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStat:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateGoal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateGoal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateGoal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteTeam({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteTeam(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTeam:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeleteAchievement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteAchievement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAchievement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateGoal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateGoal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateGoal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateStat({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStat(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStat:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateAchievement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateAchievement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateAchievement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteGoal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteGoal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteGoal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateTeam({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateTeam(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTeam:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteStat({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteStat(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteStat:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateAchievement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateAchievement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateAchievement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateTeam({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateTeam(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTeam:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateStat({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateStat(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateStat:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateGoal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateGoal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateGoal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteTeam({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteTeam(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteTeam:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTeam:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeleteAchievement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeleteAchievement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeleteAchievement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteAchievement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateGoal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateGoal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateGoal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateGoal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateStat({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateStat(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateStat:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateStat:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse\n        };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse\n        };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { FungibleTokenPacketData, DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nexport { TxResponse, ABCIMessageLog, StringEvent, Attribute, GasInfo, Result, SimulationResponse, MsgData, TxMsgData, SearchTxsResult };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.abci.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nexport { Coin, DecCoin, IntProto, DecProto };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.base.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/channel.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nexport { Channel, IdentifiedChannel, Counterparty, Packet, PacketState, Acknowledgement, PacketSequence };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.channel.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannels(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionChannels(key.connection, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = {\n    minSelfDelegation: '',\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgEditValidator = {\n    validatorAddress: '',\n    commissionRate: '',\n    minSelfDelegation: ''\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse\n        };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: '',\n    validatorSrcAddress: '',\n    validatorDstAddress: ''\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = {\n    sender: '',\n    invariantModuleName: '',\n    invariantRoute: ''\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/connection.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nexport { ConnectionEnd, IdentifiedConnection, Counterparty, ClientPaths, ConnectionPaths, Version };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.connection.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnections(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nexport { IdentifiedClientState, ConsensusStateWithHeight, ClientConsensusStates, ClientUpdateProposal, Height, Params, GenesisMetadata, IdentifiedGenesisMetadata };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.core.client.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientStates(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryConsensusStates(key.client_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport OctalmageGitgoodOctalmageGitgoodGitgood from './octalmage/gitgood/octalmage.gitgood.gitgood';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nexport default {\n    OctalmageGitgoodOctalmageGitgoodGitgood: load(OctalmageGitgoodOctalmageGitgoodGitgood, 'octalmage.gitgood.gitgood'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div class=\"container\">\n      <div v-show=\"!hasFunds && currentAccount\" class=\"sp-box sp-shadow sp-form-group\">\n        <div class=\"sp-box sp-shadow sp-form-group\">\n          <sp-button :disabled=\"submitting\" @click=\"getEXP\">Get 1 EXP to activate your account</sp-button>\n        </div>\n      </div>\n      <!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"octalmage.gitgood.gitgood\" moduleType=\"Achievement\"  />\n\t\t<SpType modulePath=\"octalmage.gitgood.gitgood\" moduleType=\"Goal\"  />\n\t\t<SpType modulePath=\"octalmage.gitgood.gitgood\" moduleType=\"Stat\"  />\n    <SpType modulePath=\"octalmage.gitgood.gitgood\" moduleType=\"Team\" />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Admin',\n  data() {\n    return {\n      balances: [],\n      submitting: false\n    }\n  },\n  computed: {\n    hasFunds() {\n      return this.balances.length > 0\n    },\n    currentAccount() {\n      if (this._depsLoaded) {\n        if (this.loggedIn) {\n          return this.$store.getters['common/wallet/address']\n        } else {\n          return null\n        }\n      } else {\n        return null\n      }\n    },\n    loggedIn() {\n      if (this._depsLoaded) {\n        return this.$store.getters['common/wallet/loggedIn']\n      } else {\n        return false\n      }\n    }\n  },\n  watch: {\n    // whenever currentAccount changes, this function will run.\n    currentAccount: async function (newAccount) {\n      if (newAccount) {\n        // Update balances for the user so we know if they already have EXP.\n        this.updateBalances()\n      }\n    }\n  },\n  methods: {\n    async updateBalances() {\n      if (this.currentAccount) {\n        await this.$store.dispatch('cosmos.bank.v1beta1/QueryAllBalances', {\n          options: { subscribe: true, all: true },\n          params: { address: this.currentAccount }\n        })\n        this.balances =\n          this.$store.getters['cosmos.bank.v1beta1/getAllBalances']({\n            params: { address: this.currentAccount }\n          })?.balances ?? []\n      } else {\n        this.balances = []\n      }\n    },\n    // Make request to faucet service to give user 1 EXP.\n    async getEXP() {\n      this.submitting = true\n      const options = {\n        address: this.currentAccount,\n        coins: ['1exp']\n      }\n\n      await fetch('http://localhost:4500', {\n        method: 'post',\n        body: JSON.stringify(options)\n      })\n\n      await this.updateBalances()\n      this.submitting = false\n    }\n  },\n  async created() {\n    this.updateBalances()\n  }\n}\n</script>\n","import { render } from \"./Admin.vue?vue&type=template&id=61e2f60f\"\nimport script from \"./Admin.vue?vue&type=script&lang=js\"\nexport * from \"./Admin.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n  <div>\n    <div class=\"container\">\n      <h1>Home</h1>\n      <Leaderboard v-bind:items=\"teams\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Leaderboard from '../components/Leaderboard'\n\nexport default {\n  name: 'Home',\n  components: {\n    Leaderboard\n  },\n  computed: {\n    teams() {\n      const teams =\n        this.$store.getters['octalmage.gitgood.gitgood/getTeamAll']({\n          params: {}\n        })?.Team ?? []\n\n      return teams\n    },\n    address() {\n      return this.$store.getters['common/wallet/address']\n    }\n  },\n  async mounted() {\n    await this.$store.dispatch('octalmage.gitgood.gitgood/QueryTeamAll', {\n      options: { subscribe: false, all: true },\n      params: {}\n    })\n  }\n}\n</script>\n","<template>\n  <div>\n    <ul>\n      <li v-for=\"item in items\" :key=\"item.message\">\n        {{ item.name }}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Leaderboard',\n  props: ['items'],\n  computed: {\n    hasWallet() {\n      return this.$store.hasModule(['common', 'wallet'])\n    }\n  }\n}\n</script>\n","import { render } from \"./Leaderboard.vue?vue&type=template&id=71929569\"\nimport script from \"./Leaderboard.vue?vue&type=script&lang=js\"\nexport * from \"./Leaderboard.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./Home.vue?vue&type=template&id=65416270\"\nimport script from \"./Home.vue?vue&type=script&lang=js\"\nexport * from \"./Home.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<h1>Team</h1>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Team',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Team.vue?vue&type=template&id=0e3fa7a6\"\nimport script from \"./Team.vue?vue&type=script&lang=js\"\nexport * from \"./Team.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Admin from '@/views/Admin.vue'\nimport Home from '@/views/Home.vue'\nimport Team from '@/views/Team.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Home,\n\t},\n\t{\n\t\tpath: '/admin',\n\t\tcomponent: Admin,\n\t},\n\t{\n\t\tpath: '/team/:id',\n\t\tcomponent: Team,\n\t},\n\t{ path: '/wallet', component: Index },\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedChannel, PacketState } from '../../../../ibc/core/channel/v1/channel';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    }\n};\nconst basePacketSequence = { portId: '', channelId: '', sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'octalmage.gitgood.gitgood';\nconst baseGoal = { creator: '', id: 0, label: '', comparison: 0, exp: 0, createdAt: 0 };\nexport const Goal = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.label !== '') {\n            writer.uint32(26).string(message.label);\n        }\n        if (message.comparison !== 0) {\n            writer.uint32(32).int32(message.comparison);\n        }\n        if (message.exp !== 0) {\n            writer.uint32(40).int32(message.exp);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(48).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGoal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.label = reader.string();\n                    break;\n                case 4:\n                    message.comparison = reader.int32();\n                    break;\n                case 5:\n                    message.exp = reader.int32();\n                    break;\n                case 6:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = String(object.label);\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = Number(object.comparison);\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = Number(object.exp);\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.label !== undefined && (obj.label = message.label);\n        message.comparison !== undefined && (obj.comparison = message.comparison);\n        message.exp !== undefined && (obj.exp = message.exp);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = object.label;\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = object.comparison;\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = object.exp;\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { MerklePrefix } from '../../../../ibc/core/commitment/v1/commitment';\nexport const protobufPackage = 'ibc.core.connection.v1';\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'STATE_UNINITIALIZED_UNSPECIFIED':\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case 'STATE_INIT':\n            return State.STATE_INIT;\n        case 2:\n        case 'STATE_TRYOPEN':\n            return State.STATE_TRYOPEN;\n        case 3:\n        case 'STATE_OPEN':\n            return State.STATE_OPEN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return 'STATE_UNINITIALIZED_UNSPECIFIED';\n        case State.STATE_INIT:\n            return 'STATE_INIT';\n        case State.STATE_TRYOPEN:\n            return 'STATE_TRYOPEN';\n        case State.STATE_OPEN:\n            return 'STATE_OPEN';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseConnectionEnd = { clientId: '', state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseIdentifiedConnection = {\n    id: '',\n    clientId: '',\n    state: 0,\n    delayPeriod: 0\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    }\n};\nconst baseCounterparty = { clientId: '', connectionId: '' };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== '') {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientPaths = { paths: '' };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseConnectionPaths = { clientId: '', paths: '' };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVersion = { identifier: '', features: '' };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== '') {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = '';\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'octalmage.gitgood.gitgood';\nconst baseAchievement = { creator: '', id: 0, achievementID: '', owner: '', createdAt: 0 };\nexport const Achievement = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.achievementID !== '') {\n            writer.uint32(26).string(message.achievementID);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(40).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAchievement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.achievementID = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = String(object.achievementID);\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.achievementID !== undefined && (obj.achievementID = message.achievementID);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = object.achievementID;\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = {\n    communityTax: '',\n    baseProposerReward: '',\n    bonusProposerReward: '',\n    withdrawAddrEnabled: false\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = {\n    title: '',\n    description: '',\n    recipient: ''\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: '',\n    height: 0\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: '',\n    description: '',\n    recipient: '',\n    amount: '',\n    deposit: ''\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = {\n    address: '',\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'octalmage.gitgood.gitgood';\nconst baseMsgCreateAchievement = { creator: '', achievementID: '', owner: '', createdAt: 0 };\nexport const MsgCreateAchievement = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.achievementID !== '') {\n            writer.uint32(18).string(message.achievementID);\n        }\n        if (message.owner !== '') {\n            writer.uint32(26).string(message.owner);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(32).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateAchievement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.achievementID = reader.string();\n                    break;\n                case 3:\n                    message.owner = reader.string();\n                    break;\n                case 4:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = String(object.achievementID);\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.achievementID !== undefined && (obj.achievementID = message.achievementID);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = object.achievementID;\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateAchievementResponse = { id: 0 };\nexport const MsgCreateAchievementResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateAchievementResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateAchievementResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateAchievementResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateAchievement = { creator: '', id: 0, achievementID: '', owner: '', createdAt: 0 };\nexport const MsgUpdateAchievement = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.achievementID !== '') {\n            writer.uint32(26).string(message.achievementID);\n        }\n        if (message.owner !== '') {\n            writer.uint32(34).string(message.owner);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(40).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateAchievement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.achievementID = reader.string();\n                    break;\n                case 4:\n                    message.owner = reader.string();\n                    break;\n                case 5:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = String(object.achievementID);\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.achievementID !== undefined && (obj.achievementID = message.achievementID);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.achievementID !== undefined && object.achievementID !== null) {\n            message.achievementID = object.achievementID;\n        }\n        else {\n            message.achievementID = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateAchievementResponse = {};\nexport const MsgUpdateAchievementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateAchievementResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateAchievementResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateAchievementResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteAchievement = { creator: '', id: 0 };\nexport const MsgDeleteAchievement = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAchievement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteAchievement };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteAchievementResponse = {};\nexport const MsgDeleteAchievementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteAchievementResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteAchievementResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteAchievementResponse };\n        return message;\n    }\n};\nconst baseMsgCreateGoal = { creator: '', label: '', comparison: 0, exp: 0, createdAt: 0 };\nexport const MsgCreateGoal = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.label !== '') {\n            writer.uint32(18).string(message.label);\n        }\n        if (message.comparison !== 0) {\n            writer.uint32(24).int32(message.comparison);\n        }\n        if (message.exp !== 0) {\n            writer.uint32(32).int32(message.exp);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(40).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateGoal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.label = reader.string();\n                    break;\n                case 3:\n                    message.comparison = reader.int32();\n                    break;\n                case 4:\n                    message.exp = reader.int32();\n                    break;\n                case 5:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = String(object.label);\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = Number(object.comparison);\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = Number(object.exp);\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.label !== undefined && (obj.label = message.label);\n        message.comparison !== undefined && (obj.comparison = message.comparison);\n        message.exp !== undefined && (obj.exp = message.exp);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = object.label;\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = object.comparison;\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = object.exp;\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateGoalResponse = { id: 0 };\nexport const MsgCreateGoalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateGoalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateGoalResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateGoalResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateGoal = { creator: '', id: 0, label: '', comparison: 0, exp: 0, createdAt: 0 };\nexport const MsgUpdateGoal = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.label !== '') {\n            writer.uint32(26).string(message.label);\n        }\n        if (message.comparison !== 0) {\n            writer.uint32(32).int32(message.comparison);\n        }\n        if (message.exp !== 0) {\n            writer.uint32(40).int32(message.exp);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(48).int32(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateGoal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.label = reader.string();\n                    break;\n                case 4:\n                    message.comparison = reader.int32();\n                    break;\n                case 5:\n                    message.exp = reader.int32();\n                    break;\n                case 6:\n                    message.createdAt = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = String(object.label);\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = Number(object.comparison);\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = Number(object.exp);\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.label !== undefined && (obj.label = message.label);\n        message.comparison !== undefined && (obj.comparison = message.comparison);\n        message.exp !== undefined && (obj.exp = message.exp);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.label !== undefined && object.label !== null) {\n            message.label = object.label;\n        }\n        else {\n            message.label = '';\n        }\n        if (object.comparison !== undefined && object.comparison !== null) {\n            message.comparison = object.comparison;\n        }\n        else {\n            message.comparison = 0;\n        }\n        if (object.exp !== undefined && object.exp !== null) {\n            message.exp = object.exp;\n        }\n        else {\n            message.exp = 0;\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateGoalResponse = {};\nexport const MsgUpdateGoalResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateGoalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateGoalResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateGoalResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteGoal = { creator: '', id: 0 };\nexport const MsgDeleteGoal = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteGoal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteGoal };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteGoalResponse = {};\nexport const MsgDeleteGoalResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteGoalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteGoalResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteGoalResponse };\n        return message;\n    }\n};\nconst baseMsgCreateStat = { creator: '', statType: 0, initial: 0, final: 0, owner: '' };\nexport const MsgCreateStat = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.statType !== 0) {\n            writer.uint32(16).int32(message.statType);\n        }\n        if (message.initial !== 0) {\n            writer.uint32(24).int32(message.initial);\n        }\n        if (message.final !== 0) {\n            writer.uint32(32).int32(message.final);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStat };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.statType = reader.int32();\n                    break;\n                case 3:\n                    message.initial = reader.int32();\n                    break;\n                case 4:\n                    message.final = reader.int32();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = Number(object.statType);\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = Number(object.initial);\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = Number(object.final);\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.statType !== undefined && (obj.statType = message.statType);\n        message.initial !== undefined && (obj.initial = message.initial);\n        message.final !== undefined && (obj.final = message.final);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = object.statType;\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = object.initial;\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = object.final;\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateStatResponse = { id: 0 };\nexport const MsgCreateStatResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateStatResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateStatResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateStatResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateStat = { creator: '', id: 0, statType: 0, initial: 0, final: 0, owner: '' };\nexport const MsgUpdateStat = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.statType !== 0) {\n            writer.uint32(24).int32(message.statType);\n        }\n        if (message.initial !== 0) {\n            writer.uint32(32).int32(message.initial);\n        }\n        if (message.final !== 0) {\n            writer.uint32(40).int32(message.final);\n        }\n        if (message.owner !== '') {\n            writer.uint32(50).string(message.owner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStat };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.statType = reader.int32();\n                    break;\n                case 4:\n                    message.initial = reader.int32();\n                    break;\n                case 5:\n                    message.final = reader.int32();\n                    break;\n                case 6:\n                    message.owner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = Number(object.statType);\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = Number(object.initial);\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = Number(object.final);\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.statType !== undefined && (obj.statType = message.statType);\n        message.initial !== undefined && (obj.initial = message.initial);\n        message.final !== undefined && (obj.final = message.final);\n        message.owner !== undefined && (obj.owner = message.owner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = object.statType;\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = object.initial;\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = object.final;\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateStatResponse = {};\nexport const MsgUpdateStatResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateStatResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateStatResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateStatResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteStat = { creator: '', id: 0 };\nexport const MsgDeleteStat = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStat };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteStatResponse = {};\nexport const MsgDeleteStatResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteStatResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteStatResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteStatResponse };\n        return message;\n    }\n};\nconst baseMsgCreateTeam = { creator: '', name: '', users: '' };\nexport const MsgCreateTeam = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.users) {\n            writer.uint32(34).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTeam };\n        message.users = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.users.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.users) {\n            obj.users = message.users.map((e) => e);\n        }\n        else {\n            obj.users = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgCreateTeamResponse = { id: 0 };\nexport const MsgCreateTeamResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTeamResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTeamResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTeamResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateTeam = { creator: '', id: 0, name: '', users: '' };\nexport const MsgUpdateTeam = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        for (const v of message.users) {\n            writer.uint32(34).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTeam };\n        message.users = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.users.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.users) {\n            obj.users = message.users.map((e) => e);\n        }\n        else {\n            obj.users = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateTeamResponse = {};\nexport const MsgUpdateTeamResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTeamResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateTeamResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateTeamResponse };\n        return message;\n    }\n};\nconst baseMsgDeleteTeam = { creator: '', id: 0 };\nexport const MsgDeleteTeam = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTeam };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteTeam };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteTeam };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgDeleteTeamResponse = {};\nexport const MsgDeleteTeamResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTeamResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteTeamResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteTeamResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateAchievement(request) {\n        const data = MsgCreateAchievement.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'CreateAchievement', data);\n        return promise.then((data) => MsgCreateAchievementResponse.decode(new Reader(data)));\n    }\n    UpdateAchievement(request) {\n        const data = MsgUpdateAchievement.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'UpdateAchievement', data);\n        return promise.then((data) => MsgUpdateAchievementResponse.decode(new Reader(data)));\n    }\n    DeleteAchievement(request) {\n        const data = MsgDeleteAchievement.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'DeleteAchievement', data);\n        return promise.then((data) => MsgDeleteAchievementResponse.decode(new Reader(data)));\n    }\n    CreateGoal(request) {\n        const data = MsgCreateGoal.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'CreateGoal', data);\n        return promise.then((data) => MsgCreateGoalResponse.decode(new Reader(data)));\n    }\n    UpdateGoal(request) {\n        const data = MsgUpdateGoal.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'UpdateGoal', data);\n        return promise.then((data) => MsgUpdateGoalResponse.decode(new Reader(data)));\n    }\n    DeleteGoal(request) {\n        const data = MsgDeleteGoal.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'DeleteGoal', data);\n        return promise.then((data) => MsgDeleteGoalResponse.decode(new Reader(data)));\n    }\n    CreateStat(request) {\n        const data = MsgCreateStat.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'CreateStat', data);\n        return promise.then((data) => MsgCreateStatResponse.decode(new Reader(data)));\n    }\n    UpdateStat(request) {\n        const data = MsgUpdateStat.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'UpdateStat', data);\n        return promise.then((data) => MsgUpdateStatResponse.decode(new Reader(data)));\n    }\n    DeleteStat(request) {\n        const data = MsgDeleteStat.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'DeleteStat', data);\n        return promise.then((data) => MsgDeleteStatResponse.decode(new Reader(data)));\n    }\n    CreateTeam(request) {\n        const data = MsgCreateTeam.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'CreateTeam', data);\n        return promise.then((data) => MsgCreateTeamResponse.decode(new Reader(data)));\n    }\n    UpdateTeam(request) {\n        const data = MsgUpdateTeam.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'UpdateTeam', data);\n        return promise.then((data) => MsgUpdateTeamResponse.decode(new Reader(data)));\n    }\n    DeleteTeam(request) {\n        const data = MsgDeleteTeam.encode(request).finish();\n        const promise = this.rpc.request('octalmage.gitgood.gitgood.Msg', 'DeleteTeam', data);\n        return promise.then((data) => MsgDeleteTeamResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: '',\n    withdrawAddress: ''\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: ''\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: '',\n    period: 0\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: '',\n    validatorAddress: ''\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: '',\n    height: 0,\n    period: 0\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = {\n    fromAddress: '',\n    toAddress: '',\n    endTime: 0,\n    delayed: false\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Channel, Packet } from '../../../../ibc/core/channel/v1/channel';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.channel.v1';\nconst baseMsgChannelOpenInit = { portId: '', signer: '' };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenTry = {\n    portId: '',\n    previousChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== '') {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = '';\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenAck = {\n    portId: '',\n    channelId: '',\n    counterpartyChannelId: '',\n    counterpartyVersion: '',\n    signer: ''\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== '') {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== '') {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = '';\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = '';\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseInit = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== '') {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: '',\n    channelId: '',\n    signer: ''\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== '') {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse\n        };\n        return message;\n    }\n};\nconst baseMsgRecvPacket = { signer: '' };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    }\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    }\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: '' };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== '') {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse\n        };\n        return message;\n    }\n};\nconst baseMsgAcknowledgement = { signer: '' };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenInit', data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenTry', data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenAck', data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelOpenConfirm', data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseInit', data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'ChannelCloseConfirm', data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'RecvPacket', data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Timeout', data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'TimeoutOnClose', data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.channel.v1.Msg', 'Acknowledgement', data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseFungibleTokenPacketData = {\n    denom: '',\n    amount: 0,\n    sender: '',\n    receiver: ''\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'octalmage.gitgood.gitgood';\nconst baseTeam = { creator: '', id: 0, name: '', users: '' };\nexport const Team = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        for (const v of message.users) {\n            writer.uint32(34).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTeam };\n        message.users = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.users.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.users) {\n            obj.users = message.users.map((e) => e);\n        }\n        else {\n            obj.users = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTeam };\n        message.users = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.users !== undefined && object.users !== null) {\n            for (const e of object.users) {\n                message.users.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { IdentifiedClientState, ClientConsensusStates, Params } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    }\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseIdentifiedGenesisMetadata = { clientId: '' };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Counterparty, Version } from '../../../../ibc/core/connection/v1/connection';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.core.connection.v1';\nconst baseMsgConnectionOpenInit = {\n    clientId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== '') {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: '',\n    previousConnectionId: '',\n    delayPeriod: 0,\n    signer: ''\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== '') {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined && (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: '',\n    counterpartyConnectionId: '',\n    signer: ''\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== '') {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = '';\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse\n        };\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: '', signer: '' };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== '') {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== '') {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = '';\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse\n        };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenInit', data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenTry', data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenAck', data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request('ibc.core.connection.v1.Msg', 'ConnectionOpenConfirm', data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from '../../../../confio/proofs';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.core.commitment.v1';\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMerklePath = { keyPath: '' };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ics23';\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_HASH':\n            return HashOp.NO_HASH;\n        case 1:\n        case 'SHA256':\n            return HashOp.SHA256;\n        case 2:\n        case 'SHA512':\n            return HashOp.SHA512;\n        case 3:\n        case 'KECCAK':\n            return HashOp.KECCAK;\n        case 4:\n        case 'RIPEMD160':\n            return HashOp.RIPEMD160;\n        case 5:\n        case 'BITCOIN':\n            return HashOp.BITCOIN;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return 'NO_HASH';\n        case HashOp.SHA256:\n            return 'SHA256';\n        case HashOp.SHA512:\n            return 'SHA512';\n        case HashOp.KECCAK:\n            return 'KECCAK';\n        case HashOp.RIPEMD160:\n            return 'RIPEMD160';\n        case HashOp.BITCOIN:\n            return 'BITCOIN';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'NO_PREFIX':\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case 'VAR_PROTO':\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case 'VAR_RLP':\n            return LengthOp.VAR_RLP;\n        case 3:\n        case 'FIXED32_BIG':\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case 'FIXED32_LITTLE':\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case 'FIXED64_BIG':\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case 'FIXED64_LITTLE':\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case 'REQUIRE_32_BYTES':\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case 'REQUIRE_64_BYTES':\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return 'NO_PREFIX';\n        case LengthOp.VAR_PROTO:\n            return 'VAR_PROTO';\n        case LengthOp.VAR_RLP:\n            return 'VAR_RLP';\n        case LengthOp.FIXED32_BIG:\n            return 'FIXED32_BIG';\n        case LengthOp.FIXED32_LITTLE:\n            return 'FIXED32_LITTLE';\n        case LengthOp.FIXED64_BIG:\n            return 'FIXED64_BIG';\n        case LengthOp.FIXED64_LITTLE:\n            return 'FIXED64_LITTLE';\n        case LengthOp.REQUIRE_32_BYTES:\n            return 'REQUIRE_32_BYTES';\n        case LengthOp.REQUIRE_64_BYTES:\n            return 'REQUIRE_64_BYTES';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch ? BatchProof.toJSON(message.batch) : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    }\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    }\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    }\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    }\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'octalmage.gitgood.gitgood';\nconst baseStat = { creator: '', id: 0, statType: 0, initial: 0, final: 0, owner: '', createdAt: 0 };\nexport const Stat = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.statType !== 0) {\n            writer.uint32(24).int32(message.statType);\n        }\n        if (message.initial !== 0) {\n            writer.uint32(32).int32(message.initial);\n        }\n        if (message.final !== 0) {\n            writer.uint32(40).int32(message.final);\n        }\n        if (message.owner !== '') {\n            writer.uint32(50).string(message.owner);\n        }\n        if (message.createdAt !== 0) {\n            writer.uint32(56).int64(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStat };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.statType = reader.int32();\n                    break;\n                case 4:\n                    message.initial = reader.int32();\n                    break;\n                case 5:\n                    message.final = reader.int32();\n                    break;\n                case 6:\n                    message.owner = reader.string();\n                    break;\n                case 7:\n                    message.createdAt = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = Number(object.statType);\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = Number(object.initial);\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = Number(object.final);\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = Number(object.createdAt);\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.statType !== undefined && (obj.statType = message.statType);\n        message.initial !== undefined && (obj.initial = message.initial);\n        message.final !== undefined && (obj.final = message.final);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStat };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.statType !== undefined && object.statType !== null) {\n            message.statType = object.statType;\n        }\n        else {\n            message.statType = 0;\n        }\n        if (object.initial !== undefined && object.initial !== null) {\n            message.initial = object.initial;\n        }\n        else {\n            message.initial = 0;\n        }\n        if (object.final !== undefined && object.final !== null) {\n            message.final = object.final;\n        }\n        else {\n            message.final = 0;\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.createdAt !== undefined && object.createdAt !== null) {\n            message.createdAt = object.createdAt;\n        }\n        else {\n            message.createdAt = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Event } from '../../../../tendermint/abci/types';\nexport const protobufPackage = 'cosmos.base.abci.v1beta1';\nconst baseTxResponse = {\n    height: 0,\n    txhash: '',\n    codespace: '',\n    code: 0,\n    data: '',\n    rawLog: '',\n    info: '',\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: ''\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== '') {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== '') {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== '') {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== '') {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== '') {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = '';\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = '';\n        }\n        return message;\n    }\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: '' };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseStringEvent = { type: '' };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseAttribute = { key: '', value: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseResult = { log: '' };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== '') {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = '';\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgData = { msgType: '' };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== '') {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = {\n    title: '',\n    description: '',\n    clientId: ''\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== '') {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = {\n    sourcePort: '',\n    sourceChannel: '',\n    sender: '',\n    receiver: '',\n    timeoutTimestamp: 0\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n"],"sourceRoot":""}